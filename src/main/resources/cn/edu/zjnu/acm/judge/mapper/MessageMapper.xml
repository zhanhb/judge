<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.zjnu.acm.judge.mapper.MessageMapper">
    <resultMap id="baseResultMap" type="cn.edu.zjnu.acm.judge.domain.Message">
        <id property="id" column="message_id"/>
        <result property="inDate" column="in_date"/>
        <result property="parent" column="parent_id"/>
        <result property="user" column="user_id"/>
        <result property="content" column="content"/>
        <result property="title" column="title"/>
        <result property="problem" column="problem_id"/>
        <result property="depth" column="depth"/>
        <result property="thread" column="thread_id"/>
        <result property="order" column="orderNum"/>
        <!--<result property="disabled" column="disabled"/>-->
    </resultMap>
    <sql id="columns">
        message_id,
        in_date,
        parent_id,
        user_id,
        content,
        title,
        problem_id,
        depth,
        thread_id,
        orderNum
    </sql>
    <sql id="listColumns">
        message_id,
        in_date,
        user_id,
        title,
        problem_id,
        depth,
        thread_id
    </sql>
    <select id="nextId" resultType="long">
        select COALESCE(max(message_id)+1,1000) maxp from message
    </select>
    <select id="findOne" resultMap="baseResultMap">
        select <include refid="columns"/>
        from message where message_id=#{id}
    </select>
    <select id="findAllByThreadIdAndOrderNumGreaterThanOrderByOrderNum" resultMap="baseResultMap">
        select <include refid="columns"/>
        from message
        where thread_id=#{thread} and orderNum>#{orderNum}
        order by orderNum
    </select>
    <update id="updateOrderNumByThreadIdAndOrderNumGreaterThan">
        update message set orderNum=orderNum+1 where thread_id=#{threadId} and orderNum>#{orderNum}
    </update>
    <update id="updateThreadIdByThreadId">
        update message set thread_id=#{threadId} where thread_id=#{original}
    </update>
    <insert id="save">
        insert into message (thread_id,message_id,parent_id,orderNum,problem_id,depth,user_id,title,content,in_date)
        values(#{id},#{id},#{parentId},#{orderNum},#{problemId},#{depth},#{userId},#{title},#{content},now())
    </insert>
    <select id="findAllByThreadIdBetween" resultMap="baseResultMap">
        select <include refid="listColumns"/>
        from message
        <where>
            <if test='min!=null'>and thread_id&gt;=#{min} </if>
            <if test='max!=null'>and thread_id&lt;#{max} </if>
            <if test='problemId!=null'>and problem_id=#{problemId} </if>
        </where>
        order by thread_id desc,orderNum
        <if test='limit!=null'> limit #{limit}</if>
    </select>
    <select id="mint" resultType="long">
        select COALESCE(min(thread_id),#{coalesce}) as mint
        from (
            select thread_id from message
            <where>
                thread_id&lt;#{top}
                <if test='problemId!=null'> and problem_id=#{problemId} </if>
            </where>
            order by thread_id desc limit #{limit}
        ) as temp
    </select>
    <select id="maxt" resultType="long">
        select COALESCE(max(thread_id),#{coalesce}) as maxt
        from (
            select thread_id from message
            <where>
                thread_id&gt;=#{top}
                <if test='problemId!=null'>and problem_id=#{problemId}</if>
            </where>
            order by thread_id limit #{limit}
        ) temp
    </select>
</mapper>
